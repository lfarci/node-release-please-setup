on:
  push:
    branches:
    - main
  
permissions:
  contents: write
  pull-requests: write

name: Release

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps: 
    - id: release_please
      uses: googleapis/release-please-action@v4
      with:
        release-type: simple

    - run: echo "Release-Please Action completed successfully!"
      if: ${{ steps.release_please.outputs.release_created == 'true' }}

    # - uses: actions/checkout@v2

    # - uses: actions/setup-node@v1
    #   with:
    #     node-version: 20
    #     registry-url: 'https://npm.pkg.github.com/'

    # - run: npm install npm@latest -g
    # - run: npm install
    # - run: npm run build

    # - name: push Deno release
    #   if: ${{ steps.release.outputs.release_created }}
    #   run: |
    #     git config user.name github-actions[bot]
    #     git config user.email 41898282+github-actions[bot]@users.noreply.github.com
    #     git remote add gh-token "https://${{ secrets.GITHUB_TOKEN}}@github.com/yargs/yargs.git"
    #     git checkout -b deno
    #     git add -f build
    #     git commit -a -m 'chore: ${{ steps.release.outputs.tag_name }} release'
    #     git push origin +deno
    #     git tag -a ${{ steps.release.outputs.tag_name }}-deno -m 'chore: ${{ steps.release.outputs.tag_name }} release'
    #     git push origin ${{ steps.release.outputs.tag_name }}-deno

    # - uses: actions/setup-node@v1
    #   if: ${{ steps.release.outputs.release_created }}
    #   with:
    #     node-version: 14
    #     registry-url: 'https://external-dot-oss-automation.appspot.com/'
    
    # - run: npm install
    #   if: ${{ steps.release.outputs.release_created }}

    # - run: npm publish
    #   if: ${{ steps.release.outputs.release_created }}
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}